                                                        Tutorial For Note Taking App

1) First we create a folder "14_Note_Taking_App" and open terminal and give command 'npx install create-react-app my-app'.
2) Now remove waste files in src folder and edit index.js and app.js. And make it very simple and remove all waste commands and libraries.
3) Now 'npm i sass' and download scss Style(Styling almost same as css). And now edit name of App.css to App.scss . And write the code of App.scss of basic 
   styling command. 
4) Now make all folders and Files that are going to be used in this project. Carefull add each folder and ther respective .js and .scss file in it. Make only
   boiler plate on each .js file and write some styling code in .scss file.
5) Now we create our App.js file and make a Browser Route that render each page.

   Chat GPT explanation of this part :
   
   <BrowserRouter>: This component is a part of React Router and provides the context for routing. It enables the use of routing features in your application.  	In other words, it sets up the environment for client-side routing.

<Routes>: This component is used to define the routes for your application. It is used to encapsulate a set of route definitions.

<Route>: This component is used to declare a route. It takes several props, and in your code, it's used to define the route hierarchy.

	path="/": This sets the path for the parent route to "/".
	element={<Home />}: This specifies the component that should be rendered when the path matches the given route. In this case, the Home component will 	be rendered.
Inside this parent route, there are nested <Route> components:

	path="/home": This sets up a nested route under the parent route with the path "/home". The Notes component will be rendered when this route 	is 	matched.

	path="/add": This sets up another nested route under the parent route with the path "/add". The AddNote component will be rendered when this route is 	matched.

	path="/edit/:id": This is a dynamic route using a parameter (:id). It means that the route will match any path that starts with "/edit/" followed by 	some value, which will be available as a parameter named id. The EditNote component will be rendered when this route is matched.

The element prop in the parent <Route> component contains the nested routes. It uses React's {} syntax to embed JSX elements.

In summary, this code sets up a basic navigation structure for a React application using React Router. The main route renders the Home component, and there are nested routes for "/home", "/add", and "/edit/:id", each rendering a different component when their respective paths are matched.

6) Now we make HomePage Header. Very simple only basic CSS. To get currentDate, Day, Month we use :
   const currentDate = new Date();
   const day = currentDate.toLocaleDateString('default', {weekday: 'long'});
   const month = currentDate.toLocaleString('default', {month: 'long'});
   const date = `${day}, ${month} ${currentDate.getDate()}, ${currentDate.getFullYear()}`;

   In left side we wish : Good Morning and etc. by using the currentHours and use if else condition and then we use useEffect to update the greeting text.
   In right side we print today's data by simple useState and the syntax which are written above.

7) We install 'npm install react-icon --save'. And then import these files in SideBar :
   import {AiFillHome} from "react-icons/ai";
   import {BsPlusLg} from "react-icons/bs";
   import {MdNoteAlt} from "react-icons/md";

This imports the AiFillHome icon from the "react-icons/ai" library.
The AiFillHome icon is part of the Ai Icons library and is designed to represent a filled home icon.
You can use this icon in your React components by rendering it as a component.
BsPlusLg from "react-icons/bs":

This imports the BsPlusLg icon from the "react-icons/bs" library.
The BsPlusLg icon is part of the Bootstrap Icons library and represents a larger version of the plus (+) icon.
Similar to the first case, you can use this icon as a React component in your application.
MdNoteAlt from "react-icons/md":

This imports the MdNoteAlt icon from the "react-icons/md" library.
The MdNoteAlt icon is part of the Material Design Icons library and represents an alternative version of a note icon.
As with the other icons, you can use this in your React components.


const location = useLocation();
let pathname = location.pathname.replace("/", "");

Let's break it down:

const location = useLocation();:

The useLocation hook is part of the React Router library. It returns an object that represents the current location of the application.
The location object typically includes properties like pathname, search, hash, state, etc.
let pathname = location.pathname.replace("/", "");:

location.pathname represents the path of the current URL. For example, if the URL is "http://example.com/some/path", location.pathname would be "/some/path".
The replace("/", "") method is used to remove the leading "/" from the pathname. This is done by replacing the first occurrence of "/" with an empty string.
The result is that pathname will contain the path without the leading "/" character.
So, if location.pathname is "/example", after the code execution, pathname will be "example". This can be useful if you want to remove a leading slash from the path for further processing or display in your application.

This pathname technique is use to open other pages. It's use an anchor type. When you click on Home you change the link from 'localhost : 3000' to 
'localhost : 3000/home' and it direct us to Home page. Same function goes for Edit PaGe. And third link is to redirect us to Save Notes.

8) Now we work on NotesPage.js and NotesList.js

import { useSelector } from "react-redux";:
This line imports the useSelector hook from the react-redux library.
useSelector is a hook used in functional components to extract and access the state from the Redux store.

import { parseISO, formatDistanceToNow } from 'date-fns';:
This line imports two functions, parseISO and formatDistanceToNow, from the date-fns library.
parseISO is used to parse a string representing a date in ISO format (e.g., "2022-01-01T12:00:00Z") into a JavaScript Date object.
formatDistanceToNow is used to format the difference between a given date and the current date as a human-readable string (e.g., "2 days ago").

   In NotesPage.js we simply return NotesList.
   In NotesList we simple give command if there is note return no note found. Otherwise we show only 80 letters of title and 150 letters of content.
   and alsov add different icon of removeNotes, editNotes and read More section which provide us to read full note.










 
